# Generated by Django 4.2.5 on 2024-09-07 06:22

from django.db import migrations, models


def seed_data_commerce(apps, schema_editor):
    UserModel = apps.get_model("app_users", "User")
    StoreModel = apps.get_model("app_commerce", "Store")
    StoreUserModel = apps.get_model("app_commerce", "StoreUser")
    ChannelModel = apps.get_model("app_commerce", "Channel")
    ProductModel = apps.get_model("app_commerce", "Product")
    OrderModel = apps.get_model("app_commerce", "Order")
    OrderItemModel = apps.get_model("app_commerce", "OrderItem")
    DeliveryModel = apps.get_model("app_commerce", "Delivery")

    user = UserModel.objects.filter(username="test_user").first()
    if not user:
        user = UserModel.objects.create_user(username="test_user", email="test_user@gmail.com", password="test_user")

    store, _ = StoreModel.objects.get_or_create(slug="test_store", defaults={"name": "test store", "api_secret": "test_store_secret"})

    StoreUserModel.objects.get_or_create(user=user, store=store)
    
    channel, _ = ChannelModel.objects.get_or_create(slug="marketplace-shopee-dotuku", store=store, defaults={"name": "shopee", "types": "marketplace"})
    
    product, _ = ProductModel.objects.get_or_create(product_id="0a28264c-2b2b-419c-903b-354e6737539a", store=store, defaults={
        "name": "test product 1", "description": "test product 1 with seed data", "price": 10000, "stock": 50
    })
    ProductModel.objects.get_or_create(product_id="09e5d4b9-558c-46aa-8179-496b9ae747da", store=store, defaults={
        "name": "test product 2", "description": "test product 2 with seed data", "price": 15000, "stock": 40
    })
    ProductModel.objects.get_or_create(product_id="a6accf0b-e4df-41f7-8860-0af0b68ca032", store=store, defaults={
        "name": "test product 3", "description": "test product 3 with seed data", "price": 20000, "stock": 30
    })

    order, _ = OrderModel.objects.get_or_create(order_id="test_order_dummy", defaults={
        "channel": channel, "total_amount": 10000, "status": "processing"
    })
    OrderItemModel.objects.get_or_create(order=order, product=product, defaults={
        "quantity": 1, "price": 10000,
    })
    DeliveryModel.objects.get_or_create(order=order, defaults={
        "expedition": "J&T", "receipt_number": "12345", "types": "purchase", "status": "process"
    })


def unseed_data_commerce(apps, schema_editor):
    UserModel = apps.get_model("app_users", "User")
    StoreModel = apps.get_model("app_commerce", "Store")
    StoreUserModel = apps.get_model("app_commerce", "StoreUser")
    ChannelModel = apps.get_model("app_commerce", "Channel")
    ProductModel = apps.get_model("app_commerce", "Product")
    OrderModel = apps.get_model("app_commerce", "Order")
    OrderItemModel = apps.get_model("app_commerce", "OrderItem")
    DeliveryModel = apps.get_model("app_commerce", "Delivery")
    
    DeliveryModel.objects.filter(order__order_id="test_order_dummy").delete()
    OrderItemModel.objects.filter(order__order_id="test_order_dummy").delete()
    OrderModel.objects.filter(order_id="test_order_dummy").delete()
    
    ProductModel.objects.filter(store__slug="test_store").delete()
    ChannelModel.objects.filter(store__slug="test_store").delete()
    StoreUserModel.objects.filter(store__slug="test_store", user__username="test_user").delete()
    UserModel.objects.filter(username="test_user").delete()
    StoreModel.objects.filter(slug="test_store").delete()


class Migration(migrations.Migration):
    dependencies = [
        ("app_commerce", "0002_update_table_attr"),
    ]

    operations = [
        migrations.RunPython(seed_data_commerce, unseed_data_commerce),
    ]
